PipedProcesses need not to release resources when it normally ends
- source.releaseCount: 0
- sink.releaseCount: 0
- a.destroyCount: 0
- b.destroyCount: 0
PipedProcesses must release resources when b.run() fails
- source.releaseCount: 1
- sink.releaseCount: 1
- a.destroyCount: 0
- b.destroyCount: 0
PipedProcesses must release resources when a.run() fails
- source.releaseCount: 1
- sink.releaseCount: 1
- a.destroyCount: 0
- b.destroyCount: 1
PipedProcesses must release resources when interrupted waiting for first.exitValue()
- source.releaseCount: 1
- sink.releaseCount: 1
- a.destroyCount: 1
- b.destroyCount: 1
PipedProcesses must release resources when interrupted waiting for second.exitValue()
- source.releaseCount: 1
- sink.releaseCount: 1
- a.destroyCount: 1
- b.destroyCount: 1
PipeSource and PipeSink must release resources when it normally ends
- in.closed: true
- out.closed: true
- source.isReleased: true
- sink.isReleased: true
PipeSource and PipeSink must release resources when when waiting for source.take()
- out.closed: true
- source.isReleased: true
- sink.isReleased: true
PipeSource and PipeSink must release resources when when waiting for sink.take()
- in.closed: true
- source.isReleased: true
- sink.isReleased: true
PipeSource and PipeSink must release resources when copying stream
- in.closed: true
- out.closed: true
- source.isReleased: true
- sink.isReleased: true
